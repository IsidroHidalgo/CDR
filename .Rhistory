install . packages (" Rcmdr ")
install . packages ("Rcmdr")
install.packages ("Rcmdr")
sessionInfo()
library(Rcmdr)
data()
install.packages(rmarkdown)
install.packages("rmarkdown")
library(rmarkdown)
installed.packages()
apply(iris[,1:4],2,min)
colnames(iris)
3*c(1,2,3)
subset(iris, Species == "setosa")
altura<-(c(151,150,162,163,178,179,182,183,190,200,171,172,173,172,172,170,165,143))
altura[altura<170]
n <- 5
runif(n) + n
runif(n) + n
help(runif)
iris$Species.
class(iris$Species)
labels(iris$Species)
names(iris$Species)
levels(iris$Species)
head(altura)
age <- c(25, 26, 29, 30, 33, 45, 23)
sol <- boxplot.stats(age)
sol
sol$stats
sol$n
sol$out
sol$conf
df <- data.frame(x=c(1,2,3,4),y=c(5,6,7,8))
df[df$x < 3,]
df$x[df$y < 3]
df$y[df$x < 3]
vectordeprueba<-c(1,2,3,4,5,6,7,8,9,10,11,12)
vectordeprueba[-c(10,11)]<-vector2
vectordeprueba[-c(10,11)]
vectordeprueba[c(0:8,11:(length(vec)-1))]
vectordeprueba[c(0:8,11:(length(vectordeprueba)-1))]
vectordeprueba[c(10,11)]
slices <- c(10, 12,4, 16, 8)
lbls <- c("US", "UK", "Australia", "Germany", "France")
pie(slices, labels = lbls, main="Pie Chart of Countries")
set.seed(1)sample(1:30, 5, replace=TRUE)
set.seed(1)
sample(1:30, 5, replace=TRUE)
sample(1:30, 5, replace=TRUE)
sample(1:30, 5, replace=TRUE)
sample(1:30, 5, replace=TRUE)
sample(1:30, 5, replace=TRUE)
sample(1:30, 5, replace=TRUE)
sample(1:30, 5, replace=FALSE)
sample(1:30, 10, replace=TRUE)
ing<-c(1560,1578,1679,1800,1200,1234,1189,1456,1395,1502)
which(ing > 1500)
ing[which> 1500]
ing[which(ing > 1500)]
estudios <- c("Alto", "Bajo", "Medio", "Bajo", "Medio")
ingresos <- c("Bajo", "Bajo", "Medio", "Bajo", "Alto")
table(ds$estudios, ds$ingresos)
ds<-estudios, ingresos
ds<-estudios+ingresos
ds=data.frame(estudios,ingresos)
table(ds$estudios, ds$ingresos)
quantile(1:10,0.5)
edad <- c(25,7)
if(edad < 18, "Menor", "Adulto")
ifthenelse(edad < 18, "Menor", "Adulto")
ifelse(edad < 18, "Menor", "Adulto")
edad
edadtexto<-ifelse(edad < 18, "Menor", "Adulto")
edadtexto
z <- c(1:8)
(ii <- order(x <- c(2,1,3,6:2), y <- c(3,4,5,7,4:1)))
cbind(x, y, z)[ii,]
levels(ing)[levels(ing)=="Elevado"] <- "Alto"
ing
head(levels)
names(ing)
head(ing)
ingresos
levels(ingresos)[levels(ing)=="Elevado"]<-"Alto"
ingresos
levels(ingresos)[levels(ingresos)=="Alto"] <- "Elevado"
ingresos
ingresos <- c("Elevado", "Bajo", "Medio", "Bajo", "Medio","Elevado","Bajo","Bajo")
levels(ingresos)[levels(ingresos)=="Alto"] <- "Elevado"
ingresos
levels(ingresos)[levels(ing)=="Elevado"]<-"Alto"
levels(ingresos)[levels(ingresos)=="Elevado"] <- "Alto"
ingresos
levels(ingresos)[levels(ingresos)=="Elevado"] <- "Alto"
levels(ingresos)
ingresos
levels(ingresos)[levels(ingresos)=="Alto"] <- "Elevado"
ingresos
Y <- c(rep("A",50),rep("B",30),rep("C",20))
aux <- sample.split(Y, SplitRatio = 3/4)
Y[aux]
Y[!aux]
install.packages(catools)
install.packages(caTools)
install.packages("caTools")
install.packages(rtools)
install.packages(r)
R --version
R<-version
version
install.packages(caTools)
install.packages("caTools")
version
install.packages("caTools")
install.packages("installr")
install.packages("caTools")
install.packages("caTools")
install.packages(c("backports", "BH", "caret", "cli", "curl", "data.table", "digest", "dplyr", "e1071", "fansi", "foreach", "forecast", "fracdiff", "ggcorrplot", "ggplot2", "glue", "gower", "Hmisc", "ipred", "iterators", "lava", "lfl", "lubridate", "mnormt", "ModelMetrics", "nloptr", "numDeriv", "pillar", "pkgconfig", "plyr", "prodlim", "psych", "purrr", "quadprog", "quantmod", "quantreg", "R6", "Rcpp", "RcppArmadillo", "RCurl", "recipes", "scales", "SQUAREM", "stringi", "survey", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "xts", "zoo"))
install.packages("caTools")
install.packages("caTools")
version
install.packages("installr")
library(installr)
updateR()
version
install.packages("installr")
library(installr)
updateR()
install.packages("installr")
install.packages("caTools")
install.packages("caTools")
version
version
install.packages("caTools")
library(caTools)
Y <- c(rep("A",50),rep("B",30),rep("C",20))
aux <- sample.split(Y, SplitRatio = 3/4)
Y[aux]
Y[!aux]
group<-c("tratamiento","tratamiento","control","tratamiento","control","tratamiento","control")
death<-c(23,12,4,5,10,9,7)
ds<-data.frame(group,death)
tapply(dt$group, dt$death, max)
tapply(dt$death, dt$group, max)
apply(dt$death, dt$group, max)
tapply(death, group, max)
install.packages("DMwR")
library(DMwR)
lofactor
Sys.getlocale()
Sys.setlocale("LC_ALL","en_US.UTF-8")
Sys.getlocale()
Sys.setlocale("LC_MESSAGES", 'en_GB.UTF-8')
Sys.setenv(LANG = "en_US.UTF-8")
install.packages("unmarked")
if(!is.installed("sampling"))
install.packages("sampling")
??is.installed
# instalación de paquetes
packages <- c("sampling")
install.packages(setdiff(packages,rownames(installed.packages())))
library(sampling)
??sampling
datos <- data("belgianmunicipalities")
class(datos)
nrow(datos)
datos <- belgianmunicipalities
rm(ls("belgianmunicipalities"))
rm(ls(belgianmunicipalities))
rm(belgianmunicipalities)
nrow(datos)
ncol(datos)
dim(datos)
names(datos)
View(datos)
table(datos$Province)
table(datos$Commune)
summary(datos)
describe(datos)
# instalación de paquetes
packages <- c("Hmisc","sampling")
install.packages(setdiff(packages,rownames(installed.packages())))
library(Hmisc)
describe(datos)
str(datos)
table(datos$Province)
# instalación de paquetes
packages <- c("dplyr","Hmisc","sampling")
install.packages(setdiff(packages,rownames(installed.packages())))
library(dplyr)
datos %>% select(Province) %>% summarise(n())
datos %>% group_by(Province) %>% summarise(n())
datos %>% group_by(Province) %>% summarise(n= n()) %>% mutate(N=cumsum(n))
datos %>% group_by(Province) %>% summarise(n= n()) %>%
mutate(N=cumsum(n),f=n/N)
datos %>% group_by(Province) %>% summarise(n= n()) %>%
mutate(N=cumsum(n),f=n/slice_max(N,1))
datos %>% group_by(Province) %>% summarise(n= n()) %>%
mutate(N=cumsum(n),f=n/tail(N,1))
datos %>% group_by(Province) %>% summarise(n= n()) %>%
mutate(N=cumsum(n),f=n/tail(N,1),F=cumsum(f))
barplot(table(datos$Province),ylab = "Frecuencias absolutas",
main = "Diagrama de barras de Provincia")
freqtab <- datos %>% group_by(Province) %>% summarise(n= n()) %>%
mutate(N=cumsum(n),f=n/tail(N,1),F=cumsum(f))
barplot(freqtab$n,ylab = "Frecuencias absolutas",
main = "Diagrama de barras de Provincia")
barplot(freqtab$n,ylab = "Frecuencias absolutas",
main = "Diagrama de barras de Provincia")
barplot(freqtab$n,ylab = "Frecuencias absolutas",
main = "Diagrama de barras de Provincia",names.arg = freqtab$Province)
barplot(freqtab$f,ylab = "Frecuencias relativas",
main = "Diagrama de barras de Provincia",names.arg = freqtab$Province)
freqtab
barplot(freqtab$n,ylab = "Frecuencias absolutas", ylim = c(0,115)
main = "Diagrama de barras de Provincia",names.arg = freqtab$Province)
barplot(freqtab$n,ylab = "Frecuencias absolutas", ylim = c(0,115),
main = "Diagrama de barras de Provincia",names.arg = freqtab$Province)
barplot(freqtab$n,ylab = "Frecuencias absolutas", ylim = c(0,120),
main = "Diagrama de barras de Provincia",names.arg = freqtab$Province)
barplot(freqtab$f,ylab = "Frecuencias relativas", ylim = c(0,1),
main = "Diagrama de barras de Provincia",names.arg = freqtab$Province)
barplot(freqtab$f,ylab = "Frecuencias relativas", ylim = c(0,0.2),
main = "Diagrama de barras de Provincia",names.arg = freqtab$Province)
plot(freqtab$n,type = "l",main="Poligono de frencuencias absolutas de Provincia",ylab = "Frecuencias absolutas")
plot(freqtab$f,type = "l",main="Poligono de frencuencias relativas de Provincia",ylab = "Frecuencias relativas")
dotchart(freqtab$f,labels = freqtab$Province, main = "Gráfico de puntos de Provincia")
plot(freqtab$f,type = "l",main="Poligono de frencuencias relativas de Provincia",ylab = "Frecuencias relativas")
pie(freqtab$n,col = rainbow(9), main = "Gráfico de tarta de Provincia")
stem(datos$medianincome)
?stem
stem(islands)
islands
hist(datos$medianincome,main="Histograma de Ingreso Mediano",col = terrain.colors(8))
hist(datos$medianincome,xlab = "Ingreso Mediano",main="Histograma de Ingreso Mediano",col = terrain.colors(8))
View(datos)
freqtab <- datos %>% group_by(Commune) %>% summarise(n= n()) %>%
mutate(N=cumsum(n),f=n/tail(N,1),F=cumsum(f))
freqtab
# instalación de paquetes
packages <- c("dplyr","ggplot2","Hmisc","sampling")
install.packages(setdiff(packages,rownames(installed.packages())))
library(ggplot2)
?belgianmunicipalities
ggplot(data = datos, aes(x=Province,y=medianincome)) +
geom_bar(stat = "identity", width = 0.5)
ggplot(data = datos, aes(x=Province,y=medianincome)) +
geom_bar(stat = "identity", color="blue",fill="steelblue")
ggplot(data = datos, aes(x=Province,y=medianincome)) +
geom_bar(stat = "identity", fill="steelblue")
update.packages("rlang")
?update.packages
library(devtools)
install.packages("devtools")
devtools::check()
install.packages("pROC")
library(pROC)
data(aSAH)
roc.s100b <- roc(aSAH$outcome, aSAH$s100b)
plot(roc.s100b)
plot(smooth(roc.s100b), add=TRUE, col="blue")
legend("bottomright", legend=c("Empirical", "Smoothed"),
col=c(par("fg"), "blue"), lwd=2)
setwd("~/GitHub/CDR")
data("med_limit")
install.packages("readxl")
library("readxl")
?readxl::read_xlsx
IPC <- readxl::read_xlsx(here::here("data-raw/IPC.xlsx"))
View(IPC)
summary(IPC)
colnames(IPC) <- "ipc"
View(IPC)
IPC <- readxl::read_xlsx(here::here("data-raw/IPC.xlsx"))
colnames(IPC) <- "ipc"
usethis::use_data(IPC, overwrite = TRUE)
devtools::document()
?read.delim
TIC2021 <- read.delim(here::here("data-raw/TIC2021.txt"),header = TRUE)
View(TIC2021)
TIC2021 <- read.delim(here::here("data-raw/TIC2021.txt"),header = TRUE,sep = " ")
View(TIC2021)
TIC2021 <- read.delim(here::here("data-raw/TIC2021.txt"),header = TRUE)
View(TIC2021)
TIC2021 <- read.delim(here::here("data-raw/TIC2021.txt"),header = TRUE)
View(TIC2021)
TIC2021 <- read.delim(here::here("data-raw/TIC2021.txt"),header = TRUE)
View(TIC2021)
TIC2021 <- read.delim(here::here("data-raw/TIC2021.txt"),header = TRUE)
rownames(TIC2021) <- TIC2021$X
TIC2021 <- TIC2021[,-1]
View(TIC2021)
TIC2021 <- read.delim(here::here("data-raw/TIC2021.txt"),header = TRUE)
rownames(TIC2021) <- TIC2021$X
TIC2021 <- TIC2021[,-1]
usethis::use_data(TIC2021, overwrite = TRUE)
devtools::document()
